{"version":3,"sources":["components/ui/Form.jsx","components/ui/ContactUs.jsx","components/ui/Footer.jsx","components/pages/ContactForm.jsx","App.js","serviceWorker.js","style/theme.js","index.js"],"names":["useStyles","makeStyles","btn","background","borderRadius","height","width","margin","&:hover","input","boxShadow","border","& .MuiOutlinedInput-root","&.Mui-focused fieldset","borderColor","outline","Form","classes","react_default","a","createElement","Grid","container","spacing","item","xs","sm","m","Typography","variant","sx","alignItem","TextField","type","className","placeholder","fullWidth","multiline","rows","maxRows","Box","Button","box","ContactUs","md","maxWidth","Footer","bgcolor","marginTop","marginBottom","paddingBottom","required","ContactForm","Container","ui_ContactUs","ui_Form","ui_Footer","App","pages_ContactForm","Boolean","window","location","hostname","match","theme","createTheme","typography","fontFamily","h2","fontStyle","fontWeight","fontSize","lineHeight","color","paddingTop","display","alignItems","textAlign","justifyContent","h3","marginLeft","h4","h5","p","semiBold","padding","ReactDOM","render","ThemeProvider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a45bc28.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Typography, Grid, Button } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    background: \"#005981\",\r\n    borderRadius: \"10px\",\r\n    height: \"58px\",\r\n    width: \"129px\",\r\n    margin: \"20px 0px 20px 18px\",\r\n    \"&:hover\": {\r\n      background: \"#005981\",\r\n    },\r\n  },\r\n  input: {\r\n    boxShadow: \"0px 2px 6px rgba(19, 18, 66, 0.07)\",\r\n    border: \"2px solid #FFFFFF !importanr\",\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n        outline: \"none\",\r\n      },\r\n    },\r\n  },\r\n});\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={5} m={1}>\r\n          <Typography variant=\"h5\" sx={{ alignItem: \"left\" }}>\r\n            Name\r\n          </Typography>\r\n\r\n          <TextField\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            className={classes.input}\r\n            placeholder=\"Full Name\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} m={1}>\r\n          <Typography variant=\"h5\" sx={{ alignItem: \"left\" }}>\r\n            Email\r\n          </Typography>\r\n\r\n          <TextField\r\n            placeholder=\"xyz@abc.com\"\r\n            fullWidth\r\n            className={classes.input}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} m={1}>\r\n          <Typography variant=\"h5\" sx={{ alignItem: \"left\" }}>\r\n            Phone Number\r\n          </Typography>\r\n\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder=\"(123) 456-7890\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={5} m={1}>\r\n          <Typography variant=\"h5\" sx={{ alignItem: \"left\" }}>\r\n            Zip Code\r\n          </Typography>\r\n\r\n          <TextField className={classes.input} placeholder=\"XXXXX\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={10.3} m={1}>\r\n          <Typography variant=\"h5\" sx={{ alignItem: \"left\" }}>\r\n            Message\r\n          </Typography>\r\n          <TextField\r\n            multiline\r\n            rows={10}\r\n            fullWidth\r\n            placeholder=\"Please type it in here...\"\r\n            maxRows={10}\r\n            className={classes.input}\r\n          />\r\n        </Grid>\r\n        <Box>\r\n          <Button variant=\"contained\" className={classes.btn}>\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    background: \"#FAFAFA\",\r\n    borderRadius: \"20px\",\r\n    margin: \"0px 20px 20px 20px \",\r\n  },\r\n});\r\nconst ContactUs = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        className={classes.box}\r\n        sx={{\r\n          height: {\r\n            xs: \"280px\",\r\n            md: \"688px\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography variant=\"h3\">Contact Us</Typography>\r\n        <Box>\r\n          <Typography variant=\"h4\">Inception</Typography>\r\n          <Typography variant=\"p\">(800) 309-6753 | info@wini.com</Typography>\r\n          <Typography variant=\"h4\">Franchising</Typography>\r\n          <Typography variant=\"p\">(800) 309-6753 | info@wini.com</Typography>\r\n          <Typography variant=\"h4\">Vendors</Typography>\r\n          <Typography variant=\"p\">(312) 557-9319 | vendors@wini.com</Typography>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","import React from \"react\";\r\nimport { Box, Typography, Button, TextField, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    background: \"#D4A656\",\r\n    borderRadius: \"10px\",\r\n    margin: \"10px 0px 10px 10px\",\r\n    height: \"55px\",\r\n    width: \"209px\",\r\n    \"&:hover\": {\r\n      background: \"#D4A656\",\r\n    },\r\n  },\r\n  input: {\r\n    boxShadow: \"0px 2px 6px rgba(19, 18, 66, 0.07)\",\r\n    background: \"#FFFFFF\",\r\n    border: \"none\",\r\n    borderRadius: \"10px\",\r\n    maxWidth: \"370px\",\r\n    width: \"290px\",\r\n    margin: \"10px 0px\",\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n});\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          bgcolor: \"#EEEEEE\",\r\n          borderRadius: \"5px\",\r\n          marginTop: \"50px\",\r\n          marginBottom: \"50px\",\r\n          // height: \"309px\",\r\n          paddingBottom: \"30px\",\r\n        }}\r\n      >\r\n        <Box>\r\n          <Typography variant=\"h2\">Subscribe to our emails</Typography>\r\n          <Typography variant=\"semiBold\">\r\n            Enter your email address to receive the latest notifications,\r\n            newsletters, and updates from WIN!{\" \"}\r\n          </Typography>\r\n        </Box>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.input}\r\n            type=\"email\"\r\n            placeholder=\"Your email address\"\r\n            // fullWidth\r\n            variant=\"outlined\"\r\n            required\r\n          />\r\n          <Button className={classes.btn} variant=\"contained\">\r\n            Subscribe\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Container, Box, Grid } from \"@mui/material\";\r\nimport Form from \"./../ui/Form\";\r\nimport ContactUs from \"./../ui/ContactUs\";\r\nimport Footer from \"./../ui/Footer\";\r\n\r\nconst ContactForm = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Box\r\n          sx={{\r\n            bgcolor: \"white\",\r\n            borderRadius: \"5px\",\r\n            marginTop: \"50px\",\r\n            boxShadow:\r\n              \"0px 54px 54px rgba(74, 58, 255, 0.02), 1px 4px 104px rgba(20, 20, 43, 0.04), 0px 98px 66px rgba(19, 18, 66, 0.02)\",\r\n          }}\r\n        >\r\n          {/* <Paper elevation={1}> */}\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <ContactUs />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={8}>\r\n              <Form />\r\n            </Grid>\r\n          </Grid>\r\n          {/* </Paper> */}\r\n        </Box>\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/pages/ContactForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nlet theme = createTheme();\r\ntheme = createTheme({\r\n  typography: {\r\n    fontFamily: \"Work Sans\",\r\n    h2: {\r\n      // height: \"58px\",\r\n      fontFamily: \"Axiforma\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 700,\r\n      fontSize: \"36px\",\r\n      lineHeight: \"160%\",\r\n      color: \"#000000\",\r\n      margin: \"10px 0px\",\r\n      paddingTop: \"10px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    h3: {\r\n      width: \"144px\",\r\n      height: \"40px\",\r\n      fontFamily: \"Axiforma\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 800,\r\n      fontSize: \"25px\",\r\n      lineHeight: \"160%\",\r\n      color: \"#000000\",\r\n      marginLeft: \"10px\",\r\n      paddingTop: \"10px\",\r\n    },\r\n    h4: {\r\n      width: \"125px\",\r\n      height: \"29px\",\r\n      fontFamily: \"Axiforma\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 600,\r\n      fontSize: \"18px\",\r\n      lineHeight: \"160%\",\r\n      color: \"#1D2B4F\",\r\n      textAlign: \"start\",\r\n      margin: \"10px 20px 10px 20px\",\r\n    },\r\n    h5: {\r\n      fontSize: \"18px\",\r\n      textAlign: \"start\",\r\n      marginBottom: \"10px\",\r\n    },\r\n    p: {\r\n      fontFamily: \"Rubik\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 400,\r\n      fontSize: \"12px\",\r\n      display: \"block\",\r\n      color: \"#000000\",\r\n      textAlign: \"start\",\r\n      justifyContent: \"start\",\r\n      margin: \"10px 20px 10px 20px\",\r\n    },\r\n    semiBold: {\r\n      fontFamily: \"Axiforma\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 400,\r\n      fontSize: \"18px\",\r\n      lineHeight: \"160%\",\r\n      margin: \"10px 0px\",\r\n      color: \"#000000\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport theme from \"./style/theme\";\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <App />\r\n  </ThemeProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}